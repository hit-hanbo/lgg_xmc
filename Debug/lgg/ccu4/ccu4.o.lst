   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "ccu4.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU4_StartPrescaler,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU4_StartPrescaler:
  25              	.LFB139:
  26              	 .file 1 "C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc/xmc_ccu4.h"
   1:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
   2:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @file xmc_ccu4.h
   3:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @date 2017-09-15
   4:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
   5:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @cond
   6:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
   7:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
   9:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * All rights reserved.                        
  11:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                             
  12:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * following conditions are met:   
  14:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  15:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * disclaimer.                        
  17:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  18:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  21:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  24:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  32:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  35:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  36:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Change History
  37:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * --------------
  38:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  39:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-02-20:
  40:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Initial <br>
  41:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Documentation updates <br>
  42:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  43:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-06-20:
  44:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  46:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-07-22:
  47:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  48:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  49:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-08-17:
  50:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  51:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t enum item names are updated according to the guideli
  52:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  53:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  54:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-09-29:
  55:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - In XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  56:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *       settings.
  57:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  58:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-10-07:
  59:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_GetEvent() is made as inline.
  60:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU4_SLICE_EnableMultipleEvents(
  61:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *       XMC_CCU4_SLICE_DisableMultipleEvents() APIs.
  62:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - DOC updates for the newly added APIs.
  63:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  64:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2016-03-09:
  65:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Optimization of write only registers 
  66:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  67:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2016-05-20:
  68:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Added XMC_CCU4_SLICE_StopClearTimer()
  69:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Changed implementation of XMC_CCU4_SLICE_StopTimer() and XMC_CCU4_SLICE_ClearTimer() to av
  70:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  71:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2017-04-27:
  72:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU4_SLICE_PRESCALER_t
  73:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  74:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2017-09-15:
  75:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Fix XMC_CCU4_SLICE_SetShadowTransferMode()
  76:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  77:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @endcond
  78:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
  79:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  80:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #ifndef XMC_CCU4_H
  81:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_H
  82:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  
  83:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
  84:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * HEADER FILES
  85:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  86:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #include "xmc_common.h"
  87:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40)
  88:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  89:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC1
  90:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  #include "xmc1_ccu4_map.h"
  91:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
  92:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  93:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC4
  94:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  #include "xmc4_ccu4_map.h"
  95:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
  96:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  97:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
  98:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup XMClib XMC Peripheral Library
  99:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @{
 100:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 101:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  
 102:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 103:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup CCU4
 104:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @brief Capture Compare Unit 4 (CCU4) low level driver for XMC family of microcontrollers<br>
 105:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 106:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The CCU4 peripheral is a major component for systems that need general purpose timers for signal
 107:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * monitoring/conditioning and Pulse Width Modulation (PWM) signal generation. Power electronic con
 108:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * switched mode power supplies or interruptible power supplies, can easily be implemented with the
 109:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CCU4 peripheral.\n
 110:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Each CCU4 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC4y (where
 111:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * timer slice can work in compare mode or in capture mode.
 112:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 113:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * APIs provided in this file cover the following functional blocks of CCU4:\n
 114:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 115:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Note:
 116:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU4_SLICE_)
 117:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU4_)
 118:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 119:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Timer(Compare mode) configuration:
 120:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_COMPARE_CONFIG_t and
 121:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CompareInit().
 122:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 123:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 124:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Start and Stop the timer. (XMC_CCU4_SLICE_StartTimer(), XMC_CCU4_SLICE_StopTimer())
 125:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU4_SLICE_SetTimerPe
 126:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetTimerCompareMatch(), XMC_CCU4_SLICE_SetPrescaler(), XMC_CCU4_SLICE_SetDithe
 127:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetPassiveLevel())
 128:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU4_SLICE_EnableMultiChannelMode())
 129:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 130:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Capture configuration:
 131:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_CAPTURE_CONFIG_t and
 132:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CaptureInit().
 133:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 134:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 135:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Configure the capture functionality. (XMC_CCU4_SLICE_Capture0Config(), XMC_CCU4_SLICE_Capture
 136:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 137:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    (XMC_CCU4_SLICE_GetCaptureRegisterValue())
 138:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 139:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Function/Event configuration:
 140:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_EVENT_CONFIG_t.\n
 141:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 142:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 143:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Enable and Disable the events. (XMC_CCU4_SLICE_EnableEvent(), XMC_CCU4_SLICE_DisableEvent())
 144:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU4_SLICE_StartConfig(), XMC_C
 145:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU4_SLICE_ModulationConfig(), 
 146:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_LoadConfig(), XMC_CCU4_SLICE_GateConfig())
 147:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU4_SLICE_Directi
 148:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Count the external events.(XMC_CCU4_SLICE_CountConfig())
 149:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU4_SLICE_EnableTrap(), XMC_CCU4
 150:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_TrapConfig())
 151:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 152:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Interrupt configuration:
 153:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 154:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @{
 155:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 156:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  
 157:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 158:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * MACROS
 159:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 160:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /* Macro to check if the interrupt enum passed is valid */
 161:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_SLICE_CHECK_INTERRUPT(interrupt) \
 162:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****     ((interrupt == XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 163:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH)              || \
 164:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP)  || \
 165:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN)|| \
 166:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT0)                 || \
 167:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT1)                 || \
 168:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT2)                 || \
 169:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_TRAP))
 170:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 171:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 172:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * ENUMS
 173:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 174:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 175:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 176:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Global data structure
 177:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 178:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_GLOBAL_TypeDef XMC_CCU4_MODULE_t;
 179:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 180:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 181:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Slice data structure
 182:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 183:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_CC4_TypeDef XMC_CCU4_SLICE_t;
 184:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 185:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 186:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Return Value of an API
 187:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 188:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_STATUS
 189:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 190:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_OK      = 0U, /**< API fulfils request */
 191:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_ERROR       , /**< API cannot fulfil the request */
 192:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_RUNNING     , /**< The timer slice is currently running */
 193:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_IDLE          /**< The timer slice is currently idle */
 194:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_STATUS_t;
 195:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 196:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 197:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  CCU4 module clock
 198:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 199:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_CLOCK
 200:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 201:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 202:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_A     , /**< External clock-A */
 203:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_B     , /**< External clock-B */
 204:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_C       /**< External clock-C */
 205:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_CLOCK_t;
 206:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 207:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 208:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CCU4 set the shadow transfer type for multichannel mode
 209:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 210:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER
 211:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 212:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 213:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 214:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 215:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 216:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 217:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 218:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 219:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 220:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 221:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 222:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 223:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 224:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 225:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 226:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 227:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 228:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 229:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 230:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 231:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Operational modes of CCU4 slice
 232:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 233:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODE
 234:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 235:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_COMPARE  = 0U, /**< slice(CC4y) operates in Compare Mode */
 236:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_CAPTURE        /**< slice(CC4y) operates in Capture Mode */
 237:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODE_t;
 238:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 239:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 240:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer counting modes for the slice
 241:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 242:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_MODE
 243:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 244:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 245:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA        /**< Center Aligned Mode */
 246:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_MODE_t;
 247:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 248:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 249:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer repetition mode for the slice
 250:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 251:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_REPEAT_MODE
 252:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 253:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U,  /**< Repetitive mode: continuous mode of operation
 254:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE        /**< Single shot mode: Once a Period match/One mat
 255:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                       occurs timer goes to idle state */
 256:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t;
 257:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 258:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 259:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer counting direction for the CCU4 slice
 260:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 261:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_DIR
 262:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 263:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 264:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 265:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_DIR_t;
 266:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 267:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 268:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Capture mode register sets
 269:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 270:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_CAP_REG_SET
 271:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 272:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 273:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_HIGH       /**< Capture register-2, Capture register-3 used */
 274:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAP_REG_SET_t;
 275:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 276:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 277:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Prescaler mode
 278:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 279:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER_MODE
 280:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 281:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 282:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider. */
 283:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_MODE_t;
 284:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 285:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 286:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer output passive level
 287:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 288:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL
 289:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 290:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 291:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 292:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 293:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 294:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 295:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer clock Divider
 296:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 297:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER
 298:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 299:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu4 */
 300:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2      , /**< Slice Clock = fccu4/2 */
 301:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4      , /**< Slice Clock = fccu4/4 */
 302:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8      , /**< Slice Clock = fccu4/8 */
 303:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16     , /**< Slice Clock = fccu4/16 */
 304:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32     , /**< Slice Clock = fccu4/32 */
 305:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_64     , /**< Slice Clock = fccu4/64 */
 306:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_128    , /**< Slice Clock = fccu4/128 */
 307:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_256    , /**< Slice Clock = fccu4/256 */
 308:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_512    , /**< Slice Clock = fccu4/512 */
 309:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu4/1024 */
 310:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu4/2048 */
 311:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu4/4096 */
 312:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu4/8192 */
 313:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu4/16384 */
 314:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32768    /**< Slice Clock = fccu4/32768 */
 315:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_t;
 316:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 317:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 318:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Function list
 319:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 320:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_FUNCTION
 321:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 322:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_START           = 0U, /**< Start function */
 323:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_STOP                , /**< Stop function */
 324:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 325:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 326:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 327:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 328:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_GATING              , /**< Gating function */
 329:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 330:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_LOAD                , /**< Load function */
 331:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_COUNT               , /**< Counting function */
 332:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 333:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 334:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_TRAP                  /**< Trap function */
 335:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_FUNCTION_t;
 336:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 337:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 338:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event list
 339:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 340:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT
 341:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 342:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_NONE  = 0U, /**< None */
 343:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_0         , /**< Event-0 */
 344:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_1         , /**< Event-1 */
 345:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_2           /**< Event-2 */
 346:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_t;
 347:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 348:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 349:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Edge sensitivity
 350:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 351:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY
 352:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 353:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE         = 0U, /**< None */
 354:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE      , /**< Rising Edge of the input signal gen
 355:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE     , /**< Falling Edge of the input signal ge
 356:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 trigger */
 357:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE          /**< Both Rising and Falling edges cause
 358:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t;
 359:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 360:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 361:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Level sensitivity
 362:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 363:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY
 364:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 365:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 366:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 367:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   /* Below enum items can be utilised specific to the functionality */
 368:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 369:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 370:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 371:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 372:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 373:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 374:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 375:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_FILTER
 376:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 377:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filter */
 378:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES      , /**< 3 clock cycles */
 379:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES      , /**< 5 clock cycles */
 380:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES        /**< 7 clock cycles */
 381:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_FILTER_t;
 382:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 383:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 384:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU4 slice.
 385:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Interconnects are specific to each device.
 386:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 387:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef uint8_t XMC_CCU4_SLICE_INPUT_t;
 388:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 389:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 390:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 391:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 392:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_END_MODE
 393:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 394:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 395:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 396:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 397:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_END_MODE_t;
 398:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 399:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 400:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Actions that can be performed upon detection of an external Timer START event
 401:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 402:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_START_MODE
 403:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 404:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 405:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 406:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_START_MODE_t;
 407:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 408:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 409:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Modulation of timer output signals
 410:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 411:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODULATION_MODE
 412:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 413:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 414:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 415:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODULATION_MODE_t;
 416:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 417:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 418:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Trap exit mode
 419:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 420:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TRAP_EXIT_MODE
 421:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 422:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 423:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 424:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TRAP_EXIT_MODE_t;
 425:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 426:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 427:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer clear on capture
 428:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 429:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_CLEAR_MODE
 430:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 431:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 432:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 433:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 434:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 435:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t;
 436:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 437:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 438:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Multi Channel Shadow transfer request configuration options
 439:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 440:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MCMS_ACTION
 441:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 442:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 443:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 the actual registers upon MCS xfer 
 444:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 445:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 register values to the actual regis
 446:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 request */
 447:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 448:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 Compare register values to the actu
 449:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 MCS xfer request */
 450:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MCMS_ACTION_t;
 451:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 452:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 453:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids
 454:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 455:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_IRQ_ID
 456:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 457:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH       = 0U , /**< Period match counting up */
 458:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH          = 1U , /**< Period match -> One match counting down */
 459:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP   = 2U , /**< Compare match counting up */
 460:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN = 3U , /**< Compare match counting down */
 461:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT0             = 8U , /**< Event-0 occurrence */
 462:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT1             = 9U , /**< Event-1 occurrence */
 463:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT2             = 10U, /**< Event-2 occurrence */
 464:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_TRAP               = 11U  /**< Trap occurrence */
 465:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_IRQ_ID_t;
 466:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 467:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 468:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 469:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 470:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MULTI_IRQ_ID
 471:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 472:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_PERIOD_MATCH       = 0x1U,   /**< Period match counting up */
 473:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_ONE_MATCH          = 0x2U,   /**< Period match -> One match counting 
 474:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP   = 0x4U,   /**< Compare match counting up */
 475:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN = 0x8U,   /**< Compare match counting down */
 476:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT0             = 0x100U, /**< Event-0 occurrence */
 477:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT1             = 0x200U, /**< Event-1 occurrence */
 478:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT2             = 0x400U, /**< Event-2 occurrence */
 479:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MULTI_IRQ_ID_t;
 480:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 481:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 482:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Service Request Lines for CCU4. Event are mapped to these SR lines and these are used to generat
 483:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 484:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SR_ID
 485:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 486:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 487:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 488:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 489:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 490:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SR_ID_t;
 491:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 492:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 493:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer options.
 494:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 495:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SHADOW_TRANSFER
 496:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 497:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_0            = CCU4_GCSS_S0SE_Msk, /**< Transfer Period, Compare a
 498:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 499:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-0 */
 500:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU4_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 501:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 502:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU4_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 503:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 504:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_1            = CCU4_GCSS_S1SE_Msk, /**< Transfer Period, Compare a
 505:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 506:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-1 */
 507:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU4_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 508:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual registers for S
 509:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU4_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 510:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 511:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_2            = CCU4_GCSS_S2SE_Msk, /**< Transfer Period, Compare a
 512:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 513:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-2 */
 514:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU4_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 515:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 516:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU4_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 517:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 518:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_3            = CCU4_GCSS_S3SE_Msk, /**< Transfer Period, Compare a
 519:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 520:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-3 */
 521:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU4_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 522:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 523:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU4_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 524:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 525:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SHADOW_TRANSFER_t;
 526:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 527:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V3) || defined(DOXYGEN)/* Defined for XMC1400 devices only */
 528:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 529:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer mode options.
 530:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @note Only available for XMC1400 series
 531:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 532:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE
 533:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 534:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U,  /**< Shadow transfer is 
 535:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                 One match. */
 536:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 537:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 538:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t; 
 539:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 540:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 541:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 542:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Immediate write into configuration register
 543:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 544:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 545:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_WRITE_INTO
 546:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 547:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU4_CC4_STC_IRPC_Msk,                  /**< Imm
 548:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 549:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 550:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_COMPARE_CONFIGURATION = CCU4_CC4_STC_IRCC_Msk,                 /**< Imm
 551:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 552:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 553:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU4_CC4_STC_IRLC_Msk,           /**< Imm
 554:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 555:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 556:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRDC_Msk,            /**< Imm
 557:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 558:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 559:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRFC_Msk /**< Imm
 560:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 561:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Val
 562:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_WRITE_INTO_t;
 563:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 564:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 565:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 566:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 567:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 568:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 569:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 570:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 571:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU4_CC4_STC_ASPC_Msk,        
 572:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 573:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 574:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 575:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE_SHADOW = CCU4_CC4_STC_ASCC_Msk,       
 576:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 577:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 578:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 579:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU4_CC4_STC_ASLC_Msk,        
 580:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 581:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 582:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU4_CC4_STC_ASDC_Msk,        
 583:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 584:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 585:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU4_CC4_STC_ASFC_
 586:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 587:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 588:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 589:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 590:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 591:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 592:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 593:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Used to create Mask needed for Multi-channel Shadow transfer enable/disable
 594:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 595:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MASK
 596:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 597:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 598:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 599:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 600:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 601:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MASK_t;
 602:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 603:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 604:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 605:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * DATA STRUCTURES
 606:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 607:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 608:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 609:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 610:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Needed to configure the various aspects of an External Event.
 611:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This structure will not connect the external event with an external function.
 612:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 613:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_EVENT_CONFIG
 614:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 615:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event *
 616:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 617:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an edge sensitive 
 618:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 619:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an level sensitive
 620:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 621:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_CONFIG_t;
 622:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 623:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard start*/
 624:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 625:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma push
 626:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma anon_unions
 627:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 628:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma warning 586
 629:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 630:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 631:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 632:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to compare 
 633:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 634:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 635:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_COMPARE_CONFIG
 636:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 637:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   union
 638:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   {
 639:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****     struct
 640:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****     {
 641:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 642:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t */
 643:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 644:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t*/
 645:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t shadow_xfer_clear : 1;  /**< Should PR and CR shadow xfer happen when timer is clear
 646:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 10;
 647:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 648:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 649:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 1;
 650:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 651:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_PRESCALER_MODE_t*/
 652:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 8;
 653:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t mcm_enable : 1;         /**< Multi-Channel mode enable? */
 654:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 6;
 655:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****     };
 656:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 657:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   };
 658:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 659:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                             Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t */
 660:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 661:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering */
 662:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t passive_level : 1;          /**< Configuration of ST and OUT passive levels.
 663:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t*
 664:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true.*/
 665:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_COMPARE_CONFIG_t;
 666:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 667:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 668:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to capture 
 669:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 670:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 671:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_CAPTURE_CONFIG
 672:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 673:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   union
 674:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   {
 675:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****     struct
 676:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****     {
 677:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 678:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 679:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 680:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                           Accepts enum ::XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t*/
 681:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 682:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 683:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 684:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 3;
 685:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU4_SLI
 686:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 15;
 687:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****     };
 688:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 689:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   };
 690:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 691:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 692:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;  /**< Enables the concatenation of the timer */
 693:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAPTURE_CONFIG_t;
 694:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard end*/
 695:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 696:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma pop
 697:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 698:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma warning restore
 699:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 700:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 701:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * API Prototypes
 702:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 703:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 704:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #ifdef __cplusplus
 705:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** extern "C" {
 706:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 707:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 708:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidModule(const XMC_CCU4_MODULE_t *const module)
 709:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 710:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 711:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 712:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = (module == CCU40);
 713:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 714:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41) 
 715:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU41);
 716:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 717:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 718:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)
 719:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU42);
 720:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 721:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 722:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)
 723:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU43);
 724:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 725:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 726:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 727:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } 
 728:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 729:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidSlice(const XMC_CCU4_SLICE_t *const slice)
 730:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 731:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 732:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 733:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = (slice == CCU40_CC40);
 734:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC41)  
 735:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC41);
 736:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 737:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC42)  
 738:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC42);
 739:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 740:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC43)  
 741:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC43);
 742:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 743:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41)  
 744:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC40);
 745:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC41)  
 746:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC41);
 747:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 748:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC42)  
 749:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC42);
 750:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 751:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC43)  
 752:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC43);
 753:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 754:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif 
 755:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)  
 756:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC40);
 757:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC41)  
 758:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC41);
 759:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 760:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC42)  
 761:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC42);
 762:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 763:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC43)  
 764:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC43);
 765:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 766:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 767:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)  
 768:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC40);
 769:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC41)  
 770:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC41);
 771:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 772:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC42)  
 773:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC42);
 774:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 775:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC43)  
 776:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC43);
 777:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 778:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif 
 779:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 780:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 781:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** } 
 782:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 783:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 784:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 785:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mcs_action multi-channel shadow transfer request configuration
 786:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 787:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 788:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 789:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 790:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Initialization of global register GCTRL.<br>\n
 791:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  As part of module initialization, behaviour of the module upon detection
 792:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU4_EnableModule().
 793:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  The API call would bring up the required CCU4 module and also initialize the module for
 794:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  the required multi-channel shadow transfer.
 795:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 796:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 797:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
 798:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 799:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action);
 800:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 801:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 802:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 803:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param clock Choice of input clock to the module
 804:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 805:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 806:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 807:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 808:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.<BR>\n
 809:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
 810:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Call to this API is valid after the XMC_CCU4_Init().
 811:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 812:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 813:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * None.<BR>
 814:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 815:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock);
 816:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 817:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 818:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 819:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 820:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 821:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 822:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 823:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the CCU4 module and brings it to active state.<BR>\n
 824:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
 825:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API before any operations are done on the CCU4 module. Invoked from  XMC_CCU4_Init()
 826:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 827:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 828:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SetModuleClock()<BR> XMC_CCU4_DisableModule()<BR> XMC_CCU4_StartPrescaler().
 829:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 830:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module);
 831:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 832:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 833:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 834:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 835:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 836:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 837:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 838:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Brings the CCU4 module to reset state and enables gating of the clock signal(if applicable depen
 839:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * on the device being selected).<BR>\n
 840:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API when a CCU4 module needs to be disabled completely.
 841:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Any operation on the CCU4 module will have no effect after this API is called.
 842:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 843:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 844:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableModule()<BR> XMC_CCU4_DisableModule().
 845:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 846:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module);
 847:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 848:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 849:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 850:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 851:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 852:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 853:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 854:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<BR>\n
 855:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
 856:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU4_Init()
 857:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  (Mandatory to fully initialize the module).Directly accessed register is GIDLC.
 858:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 859:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 860:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_Init()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescal
 861:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StopPrescaler().
 862:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 863:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StartPrescaler(XMC_CCU4_MODULE_t *const module)
 864:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
  27              	 .loc 1 864 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 865:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StartPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 866:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) CCU4_GIDLC_SPRB_Msk;
  43              	 .loc 1 866 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a DB68     	 ldr r3,[r3,#12]
  46 000c 43F48072 	 orr r2,r3,#256
  47 0010 7B68     	 ldr r3,[r7,#4]
  48 0012 DA60     	 str r2,[r3,#12]
 867:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
  49              	 .loc 1 867 0
  50 0014 0C37     	 adds r7,r7,#12
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0016 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0018 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 001c 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE139:
  65 001e 00BF     	 .section .text.XMC_CCU4_EnableClock,"ax",%progbits
  66              	 .align 2
  67              	 .thumb
  68              	 .thumb_func
  70              	XMC_CCU4_EnableClock:
  71              	.LFB143:
 868:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 869:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 870:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 871:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 872:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 873:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 874:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 875:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.<BR>\n
 876:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Opposite of the StartPrescaler routine.
 877:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
 878:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the slices of the module.Registers directly accessed is GIDLS.
 879:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 880:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 881:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_St
 882:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 883:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StopPrescaler(XMC_CCU4_MODULE_t *const module)
 884:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 885:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StopPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 886:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS |= (uint32_t) CCU4_GIDLS_CPRB_Msk;
 887:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 888:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 889:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 890:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 891:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 892:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 893:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 894:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 895:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.<BR>\n
 896:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This will return true if the prescaler is running. If clock is being supplied to the slices of t
 897:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * module then returns as true.
 898:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 899:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 900:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_StopPrescaler()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_D
 901:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 902:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsPrescalerRunning(XMC_CCU4_MODULE_t *const module)
 903:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 904:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 905:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((bool)((module->GSTAT & (uint32_t) CCU4_GSTAT_PRB_Msk) == (uint32_t)CCU4_GSTAT_PRB_Msk));
 906:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 907:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 908:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 909:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 910:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
 911:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively.
 912:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x1 to 0xF]
 913:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 914:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 915:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 916:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 917:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 918:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GIDLC.CS3I bits.\n\n
 919:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
 920:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * of the idle state simultaneously.
 921:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 922:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 923:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock().
 924:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 925:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableMultipleClocks(XMC_CCU4_MODULE_t *const module, const uint8_t c
 926:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 927:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU4_IsValidModule(module)
 928:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Wrong clock mask", (clock_mask < 16U));
 929:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 930:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) clock_mask;
 931:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 932:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 933:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 934:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 935:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be Enabled.
 936:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 937:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 938:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 939:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 940:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 941:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 942:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
 943:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
 944:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  slice whose clock needs to be enabled.
 945:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 946:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 947:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_DisableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XM
 948:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 949:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_numb
 950:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
  72              	 .loc 1 950 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76              	 
  77 0000 80B4     	 push {r7}
  78              	.LCFI6:
  79              	 .cfi_def_cfa_offset 4
  80              	 .cfi_offset 7,-4
  81 0002 83B0     	 sub sp,sp,#12
  82              	.LCFI7:
  83              	 .cfi_def_cfa_offset 16
  84 0004 00AF     	 add r7,sp,#0
  85              	.LCFI8:
  86              	 .cfi_def_cfa_register 7
  87 0006 7860     	 str r0,[r7,#4]
  88 0008 0B46     	 mov r3,r1
  89 000a FB70     	 strb r3,[r7,#3]
 951:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 952:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Slice Number", (slice_number < 4U));
 953:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 954:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= ((uint32_t) 1) << slice_number;
  90              	 .loc 1 954 0
  91 000c 7B68     	 ldr r3,[r7,#4]
  92 000e DA68     	 ldr r2,[r3,#12]
  93 0010 FB78     	 ldrb r3,[r7,#3]
  94 0012 0121     	 movs r1,#1
  95 0014 01FA03F3 	 lsl r3,r1,r3
  96 0018 1A43     	 orrs r2,r2,r3
  97 001a 7B68     	 ldr r3,[r7,#4]
  98 001c DA60     	 str r2,[r3,#12]
 955:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
  99              	 .loc 1 955 0
 100 001e 0C37     	 adds r7,r7,#12
 101              	.LCFI9:
 102              	 .cfi_def_cfa_offset 4
 103 0020 BD46     	 mov sp,r7
 104              	.LCFI10:
 105              	 .cfi_def_cfa_register 13
 106              	 
 107 0022 5DF8047B 	 ldr r7,[sp],#4
 108              	.LCFI11:
 109              	 .cfi_restore 7
 110              	 .cfi_def_cfa_offset 0
 111 0026 7047     	 bx lr
 112              	 .cfi_endproc
 113              	.LFE143:
 115              	 .section .text.XMC_CCU4_SLICE_SetTimerPeriodMatch,"ax",%progbits
 116              	 .align 2
 117              	 .thumb
 118              	 .thumb_func
 120              	XMC_CCU4_SLICE_SetTimerPeriodMatch:
 121              	.LFB157:
 956:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 957:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 958:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 959:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be disabled.
 960:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 961:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 962:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 963:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 964:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 965:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
 966:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
 967:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is possible to disable clock at slice level using the module pointer.
 968:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
 969:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GIDLS.
 970:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 971:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 972:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XMC
 973:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 974:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_DisableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_num
 975:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 976:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 977:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Slice Number", (slice_number < 4U));
 978:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 979:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS |= ((uint32_t) 1) << slice_number;
 980:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 981:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 982:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 983:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 984:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param compare_init Pointer to slice configuration structure
 985:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 986:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 987:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 988:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 989:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to compare mode, by configuring CC4yTC, CC4yCMC, CC4yPSC, CC4yDITH
 990:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yFPCS, CC4yCHC registers.\n\n 
 991:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Timer configurations in this routine.
 992:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After initialization user has to explicitly enable the shadow transfer for the required values b
 993:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask.
 994:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 995:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 996:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * None.
 997:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 998:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
 999:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init);
1000:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1001:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1002:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1003:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param capture_init Pointer to slice configuration structure
1004:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1005:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1006:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1007:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1008:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to capture mode, by configuring CC4yTC, CC4yCMC, CC4yPSC,CC4yFPCS 
1009:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Capture configurations in  this routine.After initialization user h
1010:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * enable the shadow transfer for the required  values by calling XMC_CCU4_EnableShadowTransfer()
1011:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * with appropriate mask.
1012:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1013:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1014:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config().
1015:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1016:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
1017:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init);
1018:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1019:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1020:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1021:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1022:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Start Function
1023:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param start_mode Behavior of slice when the start function is activated
1024:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1025:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1026:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1027:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1028:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Start Function of the slice, by configuring CC4yCMC.ENDS and CC4yTC.ENDM bits.\n
1029:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC4 ti
1030:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1031:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1032:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1033:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1034:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1035:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
1036:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_EVENT_t event,
1037:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode);
1038:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1039:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1040:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1041:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Stop Function
1042:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param end_mode Behavior of slice when the stop function is activated
1043:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1044:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1045:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1046:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1047:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Stop function for the slice, by configuring CC4yCMC.STRTS and CC4yTC.STRM bits.\n
1048:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU4 tim
1049:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1050:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1051:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1052:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1053:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1054:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
1055:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_EVENT_t event,
1056:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode);
1057:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1058:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1059:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1060:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External load Function
1061:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1062:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1063:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1064:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1065:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Load Function for the slice, by configuring CC4yCMC.LDS bit.\n\n
1066:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1067:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 0,CC4yTIMER register is reloaded with the value from compare register\n
1068:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 1,CC4yTIMER register is reloaded with the value from period register\n
1069:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1070:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1071:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1072:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1073:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1074:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1075:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1076:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1077:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1078:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Modulation Function
1079:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mod_mode Desired Modulation mode
1080:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1081:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1082:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1083:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1084:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1085:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1086:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Output Modulation Function of the slice, by configuring CCeyCMC.MOS, CC4yTC.EMT a
1087:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.EMS bits.\n\n
1088:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1089:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1090:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * of the modulation function is configured as well.
1091:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1092:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1093:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1094:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1095:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
1096:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_EVENT_t event,
1097:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
1098:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const bool synch_with_pwm);
1099:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1100:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1101:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1102:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Function
1103:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1104:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1105:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1106:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1107:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Function of the slice, by configuring CC4yCMC.CNTS bit.\n\n
1108:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Count function is mapped with one of the 3 events. CCU4 slice can take an external
1109:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * signal to act as the counting event. The CCU4 slice would count the
1110:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * edges present on the \b event selected.
1111:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1112:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1113:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1114:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1115:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1116:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1117:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1118:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1119:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event  Map an External event to the External Gating Function
1120:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1121:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1122:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1123:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1124:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Gating Function of the slice, by configuring CC4yCMC.GATES bit.\n\n
1125:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Gating function is mapped with one of the 3 events.  A CCU4 slice can use an input signal that w
1126:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1127:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1128:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1129:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1130:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1131:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1132:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1133:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1134:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1135:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-0 Function
1136:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1137:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1138:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1139:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1140:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-0 Function of the slice, by configuring CC4yCMC.CAP0S bit.\n\n
1141:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events.  A CCU4 slice can be configured into captur
1142:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC0V and 
1143:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1144:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1145:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1146:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1147:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1148:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1149:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1150:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1151:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-1 Function
1152:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1153:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1154:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1155:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1156:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-1 Function of the slice, by configuring CC4yCMC.CAP1S bit.\n\n
1157:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events. A CCU4 slice can be configured into capture
1158:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC2V
1159:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1160:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1161:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1162:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1163:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1164:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1165:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1166:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1167:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1168:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1169:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1170:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1171:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC4yTC.E
1172:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * In this mode the there is only one associated read address for all the capture registers.
1173:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Individual capture registers can still be accessed in this mode.
1174:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1175:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1176:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_GetCapturedValueFromFifo().
1177:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1178:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsExtendedCapReadEnabled(const XMC_CCU4_SLICE_t *const slice)
1179:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1180:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_IsExtendedCapReadEnabled:Invalid Module Pointer", XMC_CCU4_IsValidSlic
1181:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((bool)((slice->TC & (uint32_t) CCU4_CC4_TC_ECM_Msk) == (uint32_t)CCU4_CC4_TC_ECM_Msk));
1182:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1183:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1184:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V1) /* Defined for XMC4500, XMC4400, XMC4200, XMC4100 devices only */
1185:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1186:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1187:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number to check whether read value belongs to required slice or not
1188:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1189:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1190:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1191:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                     Range: [0x0 to 0xFFFF]
1192:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1193:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1194:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(ECRD register).\n\n
1195:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1196:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1197:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1198:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1199:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1200:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1201:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1202:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC4500, XMC4400, XMC4200 and XMC4100 series 
1203:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1204:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
1205:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #else
1206:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1207:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1208:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param set The capture register set from which the captured value is to be retrieved
1209:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1210:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    uint32_t Returns the value captured in the \b slice_number
1211:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             Range: [0x0 to 0xFFFF]
1212:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1213:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1214:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(CC4yECRD0 and CC4yECRD1).\n\n
1215:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1216:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1217:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1218:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1219:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1220:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1221:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1222:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1223:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1224:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1225:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                             const XMC_CCU4_SLICE_CAP_REG_SET_t set);
1226:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
1227:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1228:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1229:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1230:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Direction Function
1231:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1232:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1233:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1234:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1235:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Direction of the slice, by configuring CC4yCMC.UDS bit.\n\n
1236:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1237:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTIMER count direction depending on an external signal.
1238:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1239:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1240:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1241:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1242:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
1243:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1244:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1245:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1246:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1247:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1248:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1249:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1250:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the status bit override Function of the slice, by configuring CC4yCMC.OFS bit.\n\n
1251:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1252:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * output of the timer's CC4yST signal depending on an external signal. 
1253:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1254:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1255:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent().
1256:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1257:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice);
1258:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1259:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1260:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1261:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param exit_mode How should a previously logged trap state be exited?
1262:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1263:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1264:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1265:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1266:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1267:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Trap Function of the slice, by configuring CC4yCMC.TS, CC4yTC.TRPSE, and CC4yTC.T
1268:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1269:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1270:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1271:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1272:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1273:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1274:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1275:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1276:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
1277:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
1278:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                bool synch_with_pwm);
1279:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1280:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1281:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1282:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1283:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param ev1_config Pointer to event 1 configuration data
1284:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param ev2_config Pointer to event 2 configuration data
1285:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1286:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1287:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1288:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1289:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1290:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC4yINS reg
1291:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1292:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1293:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Event-2 input would be the override value.
1294:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1295:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1296:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig().
1297:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1298:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
1299:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
1300:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
1301:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1302:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1303:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1304:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1305:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param config Pointer to event configuration data.
1306:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1307:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1308:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1309:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1310:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures an External Event of the slice, by updating CC4yINS register .\n\n
1311:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1312:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1313:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1314:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1315:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1316:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1317:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1318:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1319:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1320:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1321:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
1322:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_t event,
1323:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config);
1324:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1325:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1326:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1327:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1328:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1329:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1330:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1331:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1332:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1333:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1334:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Selects an input for an external event, by configuring CC4yINS register.\n\n
1335:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1336:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This configures the CC4yINS.EVxIS for the selected event.
1337:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1338:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1339:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1340:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1341:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1342:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1343:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1344:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
1345:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_EVENT_t event,
1346:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_INPUT_t input);
1347:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1348:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1349:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1350:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1351:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1352:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1353:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1354:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the trap feature, by setting CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TRAP
1355:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n
1356:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1357:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1358:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1359:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1360:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_TrapConfig()<BR> XMC_CCU4_SLICE_DisableTrap()<BR> XMC_CCU4_SLICE_ConfigureEvent(
1361:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInput().
1362:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1363:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableTrap(XMC_CCU4_SLICE_t *const slice)
1364:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1365:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1366:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_TRAPE_Msk;
1367:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1368:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1369:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1370:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1371:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1372:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1373:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1374:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1375:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the trap feature, by clearing CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TR
1376:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n.\n\n
1377:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will revert the changes done by XMC_CCU4_SLICE_EnableTrap().
1378:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU4 slice.
1379:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1380:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1381:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableTrap().
1382:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1383:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableTrap(XMC_CCU4_SLICE_t *const slice)
1384:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1385:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1386:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_TRAPE_Msk);
1387:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1388:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1389:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1390:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1391:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1392:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1393:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1394:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1395:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC4yTCST.TRB bit.
1396:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1397:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1398:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer()<BR> XMC_CCU4_SLICE_StopTimer().
1399:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1400:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsTimerRunning(const XMC_CCU4_SLICE_t *const slice)
1401:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1402:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1403:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   return (bool)(((slice->TCST) & CCU4_CC4_TCST_TRB_Msk) == CCU4_CC4_TCST_TRB_Msk);
1404:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1405:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1406:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1407:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1408:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1409:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   ::XMC_CCU4_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1410:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1411:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1412:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the timer counting direction, by reading CC4yTCST.CDIR bit.\n\n
1413:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will return the direction in which the timer is currently
1414:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * incrementing(XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU4_SLICE_TIMER_COUNT_DIR_
1415:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1416:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1417:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1418:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1419:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_DIR_t XMC_CCU4_SLICE_GetCountingDir(const XMC_CCU4_SLICE
1420:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1421:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1422:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU4_CC4_TCST_CDIR_Msk) >> CCU4_CC4_TC
1423:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1424:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1425:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1426:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1427:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1428:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1429:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1430:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1431:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Starts the timer counting operation, by setting CC4yTCSET.TRBS bit.\n\n
1432:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have configured the CC4 slice before starting its timer.
1433:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1434:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1435:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1436:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StopTimer().
1437:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1438:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StartTimer(XMC_CCU4_SLICE_t *const slice)
1439:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1440:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1441:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCSET = CCU4_CC4_TCSET_TRBS_Msk;
1442:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1443:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1444:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1445:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1446:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1447:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1448:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1449:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1450:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops the Timer.<BR>\n
1451:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC4yTCCLR.TRBC bit.
1452:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1453:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1454:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1455:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1456:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopTimer(XMC_CCU4_SLICE_t *const slice)
1457:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1458:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1459:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TRBC_Msk;
1460:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1461:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1462:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1463:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1464:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1465:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1466:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1467:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1468:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Resets the timer count to zero, by setting CC4yTCCLR.TCC bit.\n\n
1469:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A timer which has been stopped can still retain the last counted value.
1470:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After invoking this API the timer value will be cleared.
1471:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1472:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1473:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1474:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1475:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_ClearTimer(XMC_CCU4_SLICE_t *const slice)
1476:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1477:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1478:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TCC_Msk;
1479:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1480:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1481:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1482:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1483:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1484:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1485:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1486:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1487:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops and resets the timer count to zero, by setting CC4yTCCLR.TCC and CC4yTCCLR.TRBC bit.\n\n
1488:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1489:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1490:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1491:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1492:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopClearTimer(XMC_CCU4_SLICE_t *const slice)
1493:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1494:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1495:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = CCU4_CC4_TCCLR_TRBC_Msk | CCU4_CC4_TCCLR_TCC_Msk;
1496:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1497:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1498:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1499:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1500:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1501:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    ::XMC_CCU4_SLICE_MODE_t returns XMC_CCU4_SLICE_MODE_COMPARE if the slice is operating in comp
1502:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                          returns XMC_CCU4_SLICE_MODE_CAPTURE if the slice is operating in captur
1503:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1504:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1505:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1506:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.CMOD bit.\n\n
1507:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Ensure that before invoking this API the CCU4 slice should be configured otherwise the output of
1508:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * invalid.
1509:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1510:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1511:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1512:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1513:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_MODE_t XMC_CCU4_SLICE_GetSliceMode(const XMC_CCU4_SLICE_t *const sli
1514:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1515:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1516:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_MODE_t)(((slice->TC) & CCU4_CC4_TC_CMOD_Msk) >> CCU4_CC4_TC_CMOD_Pos));
1517:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1518:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1519:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1520:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1521:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1522:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1523:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1524:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1525:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC4yTC.TSSM b
1526:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1527:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1528:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * reaching the terminal count.
1529:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1530:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1531:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerRepeatMode().
1532:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1533:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
1534:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1535:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1536:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1537:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1538:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
1539:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1540:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1541:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1542:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC4yTC.T
1543:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1544:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1545:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * all over again after reaching the terminal count.
1546:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1547:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1548:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerRepeatMode().
1549:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1550:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t XMC_CCU4_SLICE_GetTimerRepeatMode(
1551:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                                                            const XMC_CCU4_SLICE_
1552:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1553:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice
1554:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TSSM_Msk) >> CCU4_CC4_TC_T
1555:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1556:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1557:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1558:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1559:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1560:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1561:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1562:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1563:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC4yTC.
1564:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1565:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1566:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1567:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1568:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * greater than the compare value.
1569:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1570:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1571:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerCountingMode().
1572:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1573:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
1574:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1575:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1576:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1577:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1578:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
1579:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA if center aligned
1580:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1581:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1582:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC4yTC.TCM bit.\
1583:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1584:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1585:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCountingMode().
1586:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1587:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_MODE_t XMC_CCU4_SLICE_GetTimerCountingMode(
1588:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                                                           const XMC_CCU4_SLICE_t
1589:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1590:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1591:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TCM_Msk) >> CCU4_CC4_TC_TCM
1592:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1593:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1594:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1595:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param period_val Timer period value
1596:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *        Range: [0x0 to 0xFFFF]
1597:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1598:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1599:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1600:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1601:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer period, by writing CC4yPRS register.\n\n
1602:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1603:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1604:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1605:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual period register.
1606:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1607:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1608:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1609:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1610:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerPeriodMatch(XMC_CCU4_SLICE_t *const slice, const uint16
1611:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 122              	 .loc 1 1611 0
 123              	 .cfi_startproc
 124              	 
 125              	 
 126              	 
 127 0000 80B4     	 push {r7}
 128              	.LCFI12:
 129              	 .cfi_def_cfa_offset 4
 130              	 .cfi_offset 7,-4
 131 0002 83B0     	 sub sp,sp,#12
 132              	.LCFI13:
 133              	 .cfi_def_cfa_offset 16
 134 0004 00AF     	 add r7,sp,#0
 135              	.LCFI14:
 136              	 .cfi_def_cfa_register 7
 137 0006 7860     	 str r0,[r7,#4]
 138 0008 0B46     	 mov r3,r1
 139 000a 7B80     	 strh r3,[r7,#2]
1612:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1613:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->PRS = (uint32_t) period_val;
 140              	 .loc 1 1613 0
 141 000c 7A88     	 ldrh r2,[r7,#2]
 142 000e 7B68     	 ldr r3,[r7,#4]
 143 0010 5A63     	 str r2,[r3,#52]
1614:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 144              	 .loc 1 1614 0
 145 0012 0C37     	 adds r7,r7,#12
 146              	.LCFI15:
 147              	 .cfi_def_cfa_offset 4
 148 0014 BD46     	 mov sp,r7
 149              	.LCFI16:
 150              	 .cfi_def_cfa_register 13
 151              	 
 152 0016 5DF8047B 	 ldr r7,[sp],#4
 153              	.LCFI17:
 154              	 .cfi_restore 7
 155              	 .cfi_def_cfa_offset 0
 156 001a 7047     	 bx lr
 157              	 .cfi_endproc
 158              	.LFE157:
 160              	 .section .text.XMC_CCU4_EnableShadowTransfer,"ax",%progbits
 161              	 .align 2
 162              	 .thumb
 163              	 .thumb_func
 165              	XMC_CCU4_EnableShadowTransfer:
 166              	.LFB161:
1615:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1616:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1617:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1618:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1619:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer period value
1620:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1621:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1622:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1623:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer period value currently effective, by reading CC4yPR register.\n\n
1624:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1625:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1626:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1627:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1628:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1629:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerPeri
1630:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1631:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1632:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1633:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerPeriodMatch().
1634:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1635:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerPeriodMatch(const XMC_CCU4_SLICE_t *const slice)
1636:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1637:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1638:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->PR);
1639:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1640:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1641:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1642:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1643:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param compare_val Timer compare value
1644:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1645:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1646:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1647:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1648:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer compare value, by writing CC4yCRS register.<BR>\n
1649:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  The PWM duty cycle is determined by this value.
1650:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1651:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the the period/compare value by calling XMC_CCU4_EnableShadowTransfer() with
1652:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1653:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1654:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1655:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1656:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1657:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1658:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerCompareMatch(XMC_CCU4_SLICE_t *const slice, const uint1
1659:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1660:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1661:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->CRS = (uint32_t) compare_val;
1662:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1663:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1664:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1665:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1666:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1667:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer compare value
1668:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1669:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1670:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1671:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer compare value currently effective, by reading CC4yCRS register.\n\n
1672:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
1673:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1674:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1675:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
1676:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
1677:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerComp
1678:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1679:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is CC4yCR.
1680:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1681:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1682:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCompareMatch().
1683:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1684:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerCompareMatch(const XMC_CCU4_SLICE_t *const slice)
1685:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1686:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1687:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->CR);
1688:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1689:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1690:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1691:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1692:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
1693:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                             Use ::XMC_CCU4_SHADOW_TRANSFER_t enum items to create a mask of choi
1694:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                              using a bit wise OR operation.
1695:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1696:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1697:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1698:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1699:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
1700:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the GCSS register.\n\n
1701:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
1702:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * shadow transfer trigger after the API is called.
1703:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1704:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Any call to XMC_CCU4_SLICE_SetTimerPeriodMatch()<BR> XMC_CCU4_SLICE_SetTimerCompareMatch()<BR>
1705:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetPrescaler()<BR> XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
1706:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be succeeded by this API.
1707:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GCSS.
1708:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1709:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1710:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1711:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1712:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableShadowTransfer(XMC_CCU4_MODULE_t *const module, const uint32_t 
1713:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 167              	 .loc 1 1713 0
 168              	 .cfi_startproc
 169              	 
 170              	 
 171              	 
 172 0000 80B4     	 push {r7}
 173              	.LCFI18:
 174              	 .cfi_def_cfa_offset 4
 175              	 .cfi_offset 7,-4
 176 0002 83B0     	 sub sp,sp,#12
 177              	.LCFI19:
 178              	 .cfi_def_cfa_offset 16
 179 0004 00AF     	 add r7,sp,#0
 180              	.LCFI20:
 181              	 .cfi_def_cfa_register 7
 182 0006 7860     	 str r0,[r7,#4]
 183 0008 3960     	 str r1,[r7]
1714:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableShadowTransfer:Invalid Slice Pointer", XMC_CCU4_IsValidModule(module))
1715:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
 184              	 .loc 1 1715 0
 185 000a 7B68     	 ldr r3,[r7,#4]
 186 000c 3A68     	 ldr r2,[r7]
 187 000e 1A61     	 str r2,[r3,#16]
1716:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 188              	 .loc 1 1716 0
 189 0010 0C37     	 adds r7,r7,#12
 190              	.LCFI21:
 191              	 .cfi_def_cfa_offset 4
 192 0012 BD46     	 mov sp,r7
 193              	.LCFI22:
 194              	 .cfi_def_cfa_register 13
 195              	 
 196 0014 5DF8047B 	 ldr r7,[sp],#4
 197              	.LCFI23:
 198              	 .cfi_restore 7
 199              	 .cfi_def_cfa_offset 0
 200 0018 7047     	 bx lr
 201              	 .cfi_endproc
 202              	.LFE161:
 204 001a 00BF     	 .section .text.XMC_CCU4_SLICE_EnableEvent,"ax",%progbits
 205              	 .align 2
 206              	 .thumb
 207              	 .thumb_func
 209              	XMC_CCU4_SLICE_EnableEvent:
 210              	.LFB171:
1717:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1718:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1719:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1720:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1721:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer value
1722:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1723:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1724:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1725:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the latest timer value, from CC4yTIMER register.\n\n
1726:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1727:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1728:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerValue().
1729:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1730:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerValue(const XMC_CCU4_SLICE_t *const slice)
1731:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1732:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1733:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->TIMER);
1734:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1735:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1736:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1737:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
1738:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                  Range: [0x0 to 0xFFFF]
1739:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1740:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1741:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1742:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1743:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Loads a new timer value, by setting CC4yTIMER register.\n\n
1744:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1745:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1746:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Request to load is ignored if the timer is running.
1747:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1748:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1749:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerValue().
1750:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1751:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerValue(XMC_CCU4_SLICE_t *const slice, const uint16_t tim
1752:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1753:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1754:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TIMER = (uint32_t) timer_val;
1755:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1756:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1757:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1758:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param period_dither Boolean instruction on dithering of period match
1759:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param duty_dither Boolean instruction on dithering of compare match
1760:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param spread Dither compare value
1761:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1762:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1763:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1764:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1765:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC4yTC.DITHE and CC4yDITS bits
1766:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
1767:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
1768:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
1769:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
1770:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
1771:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetDitherCompareValue().
1772:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1773:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1774:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After this API call, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask
1775:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * to transfer the dither value.
1776:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1777:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1778:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableDithering().
1779:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1780:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_EnableDithering(XMC_CCU4_SLICE_t *const slice,
1781:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const bool period_dither,
1782:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const bool duty_dither,
1783:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const uint8_t spread);
1784:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1785:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1786:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1787:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1788:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1789:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1790:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1791:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC4yTC.DITHE bits.\n\n
1792:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This disables the Dither mode that was set in XMC_CCU4_SLICE_EnableDithering().
1793:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will not clear the dither compare value.
1794:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1795:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1796:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1797:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1798:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableDithering(XMC_CCU4_SLICE_t *const slice)
1799:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1800:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
1801:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_DITHE_Msk);
1802:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1803:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1804:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1805:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1806:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1807:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1808:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1809:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1810:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the floating prescaler, by setting CC4yTC.FPE bit.\n\n
1811:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
1812:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
1813:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
1814:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1815:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1816:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue()<BR> XMC_CCU4_SLICE_DisableFloatingPrescaler()
1817:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1818:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1819:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1820:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1821:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
1822:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_FPE_Msk;
1823:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1824:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1825:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1826:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1827:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1828:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1829:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1830:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1831:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the floating prescaler, by clearing CC4yTC.FPE bit.\n\n
1832:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would return the prescaler to the normal mode.
1833:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler that would be applied is the value present in CC4yPSC.
1834:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1835:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1836:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableFloatingPrescaler().
1837:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1838:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1839:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1840:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice
1841:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_FPE_Msk);
1842:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1843:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1844:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1845:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1846:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param comp_val Dither compare value
1847:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1848:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1849:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1850:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1851:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1852:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Sets the dither spread/compare value, by setting CC4yDITS.DCVS bits.\n\n
1853:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
1854:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
1855:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU4_EnableShadowTransfer()
1856:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * called with appropriate mask.
1857:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1858:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1859:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1860:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1861:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetDitherCompareValue(XMC_CCU4_SLICE_t *const slice, const uint
1862:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1863:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sl
1864:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->DITS = comp_val;
1865:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1866:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1867:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1868:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param div_val Prescaler divider value. Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t
1869:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1870:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1871:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1872:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1873:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1874:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the slice specific prescaler divider, by configuring the CC4yPSC and CC4yFPC registers.
1875:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler divider may only be programmed after the prescaler run bit has been cleared
1876:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * by calling XMC_CCU4_StopPrescaler().
1877:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1878:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1879:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue().
1880:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1881:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetPrescaler(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_PRESCALER_t di
1882:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1883:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1884:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1885:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param cmp_val Prescaler divider compare value
1886:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1887:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1888:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1889:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1890:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1891:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the slice specific prescaler divider compare value, by configuring CC4yFPCS register.\n
1892:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The compare value is applicable only in floating mode of operation. The prescaler divider starts
1893:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * value and increments to the compare value steadily upon every period match. Once prescaler divid
1894:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * equals the prescaler divider compare value, the value in the former resets back to the PVAL (fro
1895:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the value, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask.
1896:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1897:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1898:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1899:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1900:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue(XMC_CCU4_SLICE_t *const slice,
1901:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                      const uint8_t cmp_val)
1902:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1903:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue:Invalid Slice Pointer", XMC_CCU4_IsVa
1904:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   /*  write to the shadow register */
1905:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->FPCS = (uint32_t) cmp_val;
1906:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1907:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1908:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1909:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1910:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1911:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1912:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1913:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the multichannel mode, by setting CC4yTC.MCME bit.<BR>\n
1914:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The output state of the Timer slices can be controlled in parallel by a single input signal.
1915:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A particularly useful feature in motor control applications where the PWM output of multiple sli
1916:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * be gated and ungated by multi-channel gating inputs connected to the slices. A peripheral like P
1917:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * motor knows exactly which of the power drive switches are to be turned on and off at any instant
1918:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a gating bus (known as multi-channel inputs) control which of the slices output stays gated/unga
1919:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1920:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1921:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultiChannelMode()<BR> XMC_CCU4_SetMultiChannelShadowTransferMode().
1922:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1923:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableMultiChannelMode(XMC_CCU4_SLICE_t *const slice)
1924:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1925:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableMultiChannelMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(s
1926:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_MCME_Msk;
1927:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1928:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1929:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1930:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1931:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1932:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1933:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1934:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1935:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the multichannel mode, by clearing CC4yTC.MCME bit.<BR>\n
1936:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would return the slices to the normal operation mode.
1937:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1938:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1939:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableMultiChannelMode().
1940:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1941:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableMultiChannelMode(XMC_CCU4_SLICE_t *const slice)
1942:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1943:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableMultiChannelMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
1944:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_MCME_Msk);
1945:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1946:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1947:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1948:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1949:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_mode_msk Slices for which the configuration has to be applied.
1950:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                       Use ::XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t enum items to create a mask
1951:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                             using a bit wise OR operation.
1952:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1953:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1954:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1955:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1956:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the Multi-channel shadow transfer request trigger signal either by software or hardware 
1957:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GCTRL.MSE0, GCTRL.MSE1, GCTRL.MSE2, and GCTRL.MSE3 based on the mask.\n\n
1958:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The shadow transfer would take place either if it was requested by software or by the CCU4x.MCSS
1959:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1960:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1961:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1962:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** */
1963:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SetMultiChannelShadowTransferMode(XMC_CCU4_MODULE_t *const module, const uint32_t sli
1964:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1965:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1966:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1967:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param reg_num The capture register from which the captured value is to be retrieved
1968:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                Range: [0,3]
1969:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1970:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    uint32_t  Returns the Capture register value.
1971:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *              Range: [0 to 0x1FFFFF]
1972:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1973:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1974:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves timer value which has been captured in the Capture registers, by reading CC4yCV[\b reg
1975:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The signal whose timing characteristics are to be measured must be mapped to an event which in t
1976:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * to the capture function. Based on the capture criteria, the timer values are captured into captu
1977:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * characteristics of the input signal may then be derived/inferred from the captured values. The f
1978:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * to find out if there is a new captured value present.
1979:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1980:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1981:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetLastCapturedTimerValue().
1982:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1983:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCaptureRegisterValue(const XMC_CCU4_SLICE_t *const slice, const uint8_t 
1984:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1985:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1986:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1987:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param set  The capture register set, which must be evaluated
1988:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param val_ptr Out Parameter of the API.Stores the captured timer value into this out parameter.
1989:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1990:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     ::XMC_CCU4_STATUS_t Returns XMC_CCU4_STATUS_OK if there was new value present in the capture
1991:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   returns XMC_CCU4_STATUS_ERROR if there was no new value present in the capture
1992:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1993:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1994:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the latest captured timer value, by reading CC4yCV registers.\n\n
1995:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieve the timer value last stored by the slice. When separate capture events are used,
1996:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * users must specify the capture set to evaluate. If single capture event mode is used, all 4 capt
1997:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * evaluated.\n
1998:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The lowest register is evaluated first followed by the next higher ordered register and this con
1999:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * capture registers have been evaluated.
2000:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2001:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2002:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetCaptureRegisterValue().
2003:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2004:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** XMC_CCU4_STATUS_t XMC_CCU4_SLICE_GetLastCapturedTimerValue(const XMC_CCU4_SLICE_t *const slice,
2005:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                            const XMC_CCU4_SLICE_CAP_REG_SET_t set,
2006:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                            uint32_t *val_ptr);
2007:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2008:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2009:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2010:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2011:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2012:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2013:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2014:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2015:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the generation of an interrupt pulse for the event, by configuring CC4yINTE register.\n\
2016:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2017:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * NVIC node must be enabled as well. This API merely enables the event. Binding with SR is perform
2018:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2019:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2020:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableMultipleEvents()<BR> XMC_CCU4_SLICE_
2021:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultipleEvents().
2022:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2023:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableEvent(XMC_CCU4_SLICE_t *const slice,
2024:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                 const XMC_CCU4_SLICE_IRQ_ID_t event)
2025:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 211              	 .loc 1 2025 0
 212              	 .cfi_startproc
 213              	 
 214              	 
 215              	 
 216 0000 80B4     	 push {r7}
 217              	.LCFI24:
 218              	 .cfi_def_cfa_offset 4
 219              	 .cfi_offset 7,-4
 220 0002 83B0     	 sub sp,sp,#12
 221              	.LCFI25:
 222              	 .cfi_def_cfa_offset 16
 223 0004 00AF     	 add r7,sp,#0
 224              	.LCFI26:
 225              	 .cfi_def_cfa_register 7
 226 0006 7860     	 str r0,[r7,#4]
 227 0008 0B46     	 mov r3,r1
 228 000a FB70     	 strb r3,[r7,#3]
2026:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2027:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
2028:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->INTE |= ((uint32_t) 1) << ((uint32_t) event);
 229              	 .loc 1 2028 0
 230 000c 7B68     	 ldr r3,[r7,#4]
 231 000e D3F8A420 	 ldr r2,[r3,#164]
 232 0012 FB78     	 ldrb r3,[r7,#3]
 233 0014 0121     	 movs r1,#1
 234 0016 01FA03F3 	 lsl r3,r1,r3
 235 001a 1A43     	 orrs r2,r2,r3
 236 001c 7B68     	 ldr r3,[r7,#4]
 237 001e C3F8A420 	 str r2,[r3,#164]
2029:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 238              	 .loc 1 2029 0
 239 0022 0C37     	 adds r7,r7,#12
 240              	.LCFI27:
 241              	 .cfi_def_cfa_offset 4
 242 0024 BD46     	 mov sp,r7
 243              	.LCFI28:
 244              	 .cfi_def_cfa_register 13
 245              	 
 246 0026 5DF8047B 	 ldr r7,[sp],#4
 247              	.LCFI29:
 248              	 .cfi_restore 7
 249              	 .cfi_def_cfa_offset 0
 250 002a 7047     	 bx lr
 251              	 .cfi_endproc
 252              	.LFE171:
 254              	 .section .text.XMC_SCU_SetCcuTriggerHigh,"ax",%progbits
 255              	 .align 2
 256              	 .thumb
 257              	 .thumb_func
 259              	XMC_SCU_SetCcuTriggerHigh:
 260              	.LFB206:
 261              	 .file 2 "C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc/xmc_scu.h"
   1:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** /**
   2:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * @date 2016-03-09
   4:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
   5:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * @cond
   6:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
   7:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
   9:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * All rights reserved.                        
  11:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *                                             
  12:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * following conditions are met:   
  14:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  15:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * disclaimer.                        
  17:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * 
  18:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * 
  21:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  24:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  32:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  35:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
  36:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Change History
  37:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * --------------
  38:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
  39:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  40:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  41:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
  42:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  43:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  44:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  45:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
  46:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  47:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  49:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  50:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  51:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  52:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
  53:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  54:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  55:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *      
  56:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  57:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  58:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *      
  59:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * @endcond 
  60:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
  61:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  */
  62:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  63:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  64:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  
  65:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  66:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  67:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  68:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc_common.h>
  69:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** 
  70:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** /**
  71:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
  73:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  */
  74:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  
  75:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** /**
  76:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  77:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  78:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
  79:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  80:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  81:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  82:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Power control
  83:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4 
  84:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control 
  85:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  86:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  87:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  88:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  89:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
  90:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  91:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic 
  93:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  94:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
  95:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
  96:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
  97:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
  98:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  99:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 100:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 101:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 102:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 103:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 104:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 105:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 106:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 107:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 108:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 109:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 110:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 111:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
 112:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 113:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 114:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 115:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 116:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 117:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 118:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 119:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 120:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \endif <br>
 121:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
 122:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 123:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 124:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 125:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 126:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
 127:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 128:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 129:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 130:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 131:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 132:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 133:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
 134:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 135:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 136:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
 137:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 138:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 139:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 140:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
 141:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 142:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 143:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 144:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
 145:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 146:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 147:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 148:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 149:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 150:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 151:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 152:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 153:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 154:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 155:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 156:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 157:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
 158:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  */
 159:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  
 160:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 161:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * MACROS
 162:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 163:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** 
 164:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 165:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * ENUMS
 166:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 167:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** /**
 168:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 169:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  */
 170:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS 
 171:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** {
 172:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 173:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 174:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 175:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 176:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 177:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 178:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** 
 179:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** 
 180:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 181:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 182:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 183:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** 
 184:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** /**
 185:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 186:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  */
 187:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 188:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** 
 189:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 190:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 191:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 192:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** 
 193:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 194:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc1_scu.h>
 195:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 196:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc4_scu.h>
 197:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** #else
 198:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 199:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 200:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** 
 201:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 202:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 203:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 204:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** 
 205:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 206:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** extern "C" {
 207:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 208:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** 
 209:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** 
 210:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** /**
 211:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
 212:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 213:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 214:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 215:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 216:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
 217:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 218:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  *
 219:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 220:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 221:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 222:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 223:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 224:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 225:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 226:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 227:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 228:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 229:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****  */
 230:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 231:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** {
 262              	 .loc 2 231 0
 263              	 .cfi_startproc
 264              	 
 265              	 
 266              	 
 267 0000 80B4     	 push {r7}
 268              	.LCFI30:
 269              	 .cfi_def_cfa_offset 4
 270              	 .cfi_offset 7,-4
 271 0002 83B0     	 sub sp,sp,#12
 272              	.LCFI31:
 273              	 .cfi_def_cfa_offset 16
 274 0004 00AF     	 add r7,sp,#0
 275              	.LCFI32:
 276              	 .cfi_def_cfa_register 7
 277 0006 7860     	 str r0,[r7,#4]
 232:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 278              	 .loc 2 232 0
 279 0008 0549     	 ldr r1,.L7
 280 000a 054B     	 ldr r3,.L7
 281 000c DA6C     	 ldr r2,[r3,#76]
 282 000e 7B68     	 ldr r3,[r7,#4]
 283 0010 1343     	 orrs r3,r3,r2
 284 0012 CB64     	 str r3,[r1,#76]
 233:C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc\xmc_scu.h **** }
 285              	 .loc 2 233 0
 286 0014 0C37     	 adds r7,r7,#12
 287              	.LCFI33:
 288              	 .cfi_def_cfa_offset 4
 289 0016 BD46     	 mov sp,r7
 290              	.LCFI34:
 291              	 .cfi_def_cfa_register 13
 292              	 
 293 0018 5DF8047B 	 ldr r7,[sp],#4
 294              	.LCFI35:
 295              	 .cfi_restore 7
 296              	 .cfi_def_cfa_offset 0
 297 001c 7047     	 bx lr
 298              	.L8:
 299 001e 00BF     	 .align 2
 300              	.L7:
 301 0020 00400050 	 .word 1342193664
 302              	 .cfi_endproc
 303              	.LFE206:
 305              	 .global _ccu4_dac_trigger_config
 306              	 .section .rodata._ccu4_dac_trigger_config,"a",%progbits
 307              	 .align 2
 310              	_ccu4_dac_trigger_config:
 311 0000 00000000 	 .space 8
 311      00000000 
 312              	 .section .text.lgg_ccu40_init,"ax",%progbits
 313              	 .align 2
 314              	 .global lgg_ccu40_init
 315              	 .thumb
 316              	 .thumb_func
 318              	lgg_ccu40_init:
 319              	.LFB319:
 320              	 .file 3 "../lgg/ccu4/ccu4.c"
   1:../lgg/ccu4/ccu4.c **** #include "lgg/lgg.h"
   2:../lgg/ccu4/ccu4.c **** #include "ccu4.h"
   3:../lgg/ccu4/ccu4.c **** 
   4:../lgg/ccu4/ccu4.c **** const XMC_CCU4_SLICE_COMPARE_CONFIG_t _ccu4_dac_trigger_config =
   5:../lgg/ccu4/ccu4.c **** {
   6:../lgg/ccu4/ccu4.c **** 		.timer_mode = XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA,
   7:../lgg/ccu4/ccu4.c **** 		.monoshot = 0,
   8:../lgg/ccu4/ccu4.c **** 		.shadow_xfer_clear = 0,
   9:../lgg/ccu4/ccu4.c **** 		.dither_timer_period = 0,
  10:../lgg/ccu4/ccu4.c **** 		.dither_duty_cycle = 0,
  11:../lgg/ccu4/ccu4.c **** 		.prescaler_mode = XMC_CCU4_SLICE_PRESCALER_MODE_NORMAL,
  12:../lgg/ccu4/ccu4.c **** 		.mcm_enable = 0,
  13:../lgg/ccu4/ccu4.c **** 		.prescaler_initval = 0,
  14:../lgg/ccu4/ccu4.c **** 		.float_limit = 0,
  15:../lgg/ccu4/ccu4.c **** 		.passive_level = XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_LOW,
  16:../lgg/ccu4/ccu4.c **** 		.timer_concatenation = 0,
  17:../lgg/ccu4/ccu4.c **** };
  18:../lgg/ccu4/ccu4.c **** 
  19:../lgg/ccu4/ccu4.c **** 
  20:../lgg/ccu4/ccu4.c **** /*
  21:../lgg/ccu4/ccu4.c ****  * 		CCU4 trigger
  22:../lgg/ccu4/ccu4.c ****  * */
  23:../lgg/ccu4/ccu4.c **** void lgg_ccu40_init(void)
  24:../lgg/ccu4/ccu4.c **** {
 321              	 .loc 3 24 0
 322              	 .cfi_startproc
 323              	 
 324              	 
 325 0000 80B5     	 push {r7,lr}
 326              	.LCFI36:
 327              	 .cfi_def_cfa_offset 8
 328              	 .cfi_offset 7,-8
 329              	 .cfi_offset 14,-4
 330 0002 00AF     	 add r7,sp,#0
 331              	.LCFI37:
 332              	 .cfi_def_cfa_register 7
  25:../lgg/ccu4/ccu4.c **** 	XMC_CCU4_SetModuleClock(CCU40, XMC_CCU4_CLOCK_SCU);
 333              	 .loc 3 25 0
 334 0004 1448     	 ldr r0,.L10
 335 0006 0021     	 movs r1,#0
 336 0008 FFF7FEFF 	 bl XMC_CCU4_SetModuleClock
  26:../lgg/ccu4/ccu4.c **** 	XMC_CCU4_Init(CCU40, XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR);
 337              	 .loc 3 26 0
 338 000c 1248     	 ldr r0,.L10
 339 000e 0021     	 movs r1,#0
 340 0010 FFF7FEFF 	 bl XMC_CCU4_Init
  27:../lgg/ccu4/ccu4.c **** 	XMC_CCU4_EnableClock(CCU40, 0);
 341              	 .loc 3 27 0
 342 0014 1048     	 ldr r0,.L10
 343 0016 0021     	 movs r1,#0
 344 0018 FFF7FEFF 	 bl XMC_CCU4_EnableClock
  28:../lgg/ccu4/ccu4.c **** 	XMC_CCU4_StartPrescaler(CCU40);
 345              	 .loc 3 28 0
 346 001c 0E48     	 ldr r0,.L10
 347 001e FFF7FEFF 	 bl XMC_CCU4_StartPrescaler
  29:../lgg/ccu4/ccu4.c **** 
  30:../lgg/ccu4/ccu4.c **** 	XMC_CCU4_SLICE_CompareInit(CCU40_CC40, &_ccu4_dac_trigger_config);
 348              	 .loc 3 30 0
 349 0022 0E48     	 ldr r0,.L10+4
 350 0024 0E49     	 ldr r1,.L10+8
 351 0026 FFF7FEFF 	 bl XMC_CCU4_SLICE_CompareInit
  31:../lgg/ccu4/ccu4.c **** 	XMC_CCU4_SLICE_EnableEvent(CCU40_CC40, XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH);
 352              	 .loc 3 31 0
 353 002a 0C48     	 ldr r0,.L10+4
 354 002c 0021     	 movs r1,#0
 355 002e FFF7FEFF 	 bl XMC_CCU4_SLICE_EnableEvent
  32:../lgg/ccu4/ccu4.c **** 	XMC_CCU4_SLICE_SetInterruptNode(CCU40_CC40, XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH, XMC_CCU4_SLICE_SR_
 356              	 .loc 3 32 0
 357 0032 0A48     	 ldr r0,.L10+4
 358 0034 0021     	 movs r1,#0
 359 0036 0122     	 movs r2,#1
 360 0038 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetInterruptNode
  33:../lgg/ccu4/ccu4.c **** 
  34:../lgg/ccu4/ccu4.c **** 	XMC_CCU4_SLICE_SetTimerPeriodMatch(CCU40_CC40, 1000 - 1);
 361              	 .loc 3 34 0
 362 003c 0748     	 ldr r0,.L10+4
 363 003e 40F2E731 	 movw r1,#999
 364 0042 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerPeriodMatch
  35:../lgg/ccu4/ccu4.c **** 	XMC_CCU4_EnableShadowTransfer(CCU40, XMC_CCU4_SHADOW_TRANSFER_SLICE_0);
 365              	 .loc 3 35 0
 366 0046 0448     	 ldr r0,.L10
 367 0048 0121     	 movs r1,#1
 368 004a FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
  36:../lgg/ccu4/ccu4.c **** 	XMC_SCU_SetCcuTriggerHigh(SCU_GENERAL_CCUCON_GSC40_Msk);
 369              	 .loc 3 36 0
 370 004e 0120     	 movs r0,#1
 371 0050 FFF7FEFF 	 bl XMC_SCU_SetCcuTriggerHigh
  37:../lgg/ccu4/ccu4.c **** }
 372              	 .loc 3 37 0
 373 0054 80BD     	 pop {r7,pc}
 374              	.L11:
 375 0056 00BF     	 .align 2
 376              	.L10:
 377 0058 00C00040 	 .word 1073790976
 378 005c 00C10040 	 .word 1073791232
 379 0060 00000000 	 .word _ccu4_dac_trigger_config
 380              	 .cfi_endproc
 381              	.LFE319:
 383              	 .text
 384              	.Letext0:
 385              	 .file 4 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 386              	 .file 5 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 387              	 .file 6 "C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 388              	 .file 7 "C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/XMCLib/inc/xmc_usic.h"
 389              	 .file 8 "C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/CMSIS/Include/cmsis_gcc.h"
 390              	 .file 9 "C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/CMSIS/Include/core_cm4.h"
 391              	 .file 10 "C:/Users/lgg/Desktop/hithanbo/dave_ws/lgg_xmc/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ccu4.c
    {standard input}:20     .text.XMC_CCU4_StartPrescaler:00000000 $t
    {standard input}:24     .text.XMC_CCU4_StartPrescaler:00000000 XMC_CCU4_StartPrescaler
    {standard input}:66     .text.XMC_CCU4_EnableClock:00000000 $t
    {standard input}:70     .text.XMC_CCU4_EnableClock:00000000 XMC_CCU4_EnableClock
    {standard input}:116    .text.XMC_CCU4_SLICE_SetTimerPeriodMatch:00000000 $t
    {standard input}:120    .text.XMC_CCU4_SLICE_SetTimerPeriodMatch:00000000 XMC_CCU4_SLICE_SetTimerPeriodMatch
    {standard input}:161    .text.XMC_CCU4_EnableShadowTransfer:00000000 $t
    {standard input}:165    .text.XMC_CCU4_EnableShadowTransfer:00000000 XMC_CCU4_EnableShadowTransfer
    {standard input}:205    .text.XMC_CCU4_SLICE_EnableEvent:00000000 $t
    {standard input}:209    .text.XMC_CCU4_SLICE_EnableEvent:00000000 XMC_CCU4_SLICE_EnableEvent
    {standard input}:255    .text.XMC_SCU_SetCcuTriggerHigh:00000000 $t
    {standard input}:259    .text.XMC_SCU_SetCcuTriggerHigh:00000000 XMC_SCU_SetCcuTriggerHigh
    {standard input}:301    .text.XMC_SCU_SetCcuTriggerHigh:00000020 $d
    {standard input}:310    .rodata._ccu4_dac_trigger_config:00000000 _ccu4_dac_trigger_config
    {standard input}:307    .rodata._ccu4_dac_trigger_config:00000000 $d
    {standard input}:313    .text.lgg_ccu40_init:00000000 $t
    {standard input}:318    .text.lgg_ccu40_init:00000000 lgg_ccu40_init
    {standard input}:377    .text.lgg_ccu40_init:00000058 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_CCU4_SetModuleClock
XMC_CCU4_Init
XMC_CCU4_SLICE_CompareInit
XMC_CCU4_SLICE_SetInterruptNode
